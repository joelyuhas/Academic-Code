


ARM Macro Assembler    Page 1 Program Title for Listing Header Goes Here


    1 00000000                 TTL              Program Title for Listing Header Goes Here
    2 00000000         ;****************************************************************
    3 00000000         ;Descriptive comment header goes here.
    4 00000000         ;(What does the program do?)
    5 00000000         ;Name:  Joel Yuhas
    6 00000000         ;Date:  2/25/2016
    7 00000000         ;Class:  CMPE-250
    8 00000000         ;Section:  Lab 4, thursday, 2:00-3:50
    9 00000000         ;---------------------------------------------------------------
   10 00000000         ;Keil Simulator Template for KL46
   11 00000000         ;R. W. Melton
   12 00000000         ;January 23, 2015
   13 00000000         ;****************************************************************
   14 00000000         ;Assembler directives
   15 00000000                 THUMB
   17 00000000         ;****************************************************************
   18 00000000         ;EQUates
   19 00000000 00000019 
                       MAX_DATA
                               EQU              25
   20 00000000         
   21 00000000         
   22 00000000         ;Vectors
   23 00000000 000000C0 
                       VECTOR_TABLE_SIZE
                               EQU              0x000000C0
   24 00000000 00000004 
                       VECTOR_SIZE
                               EQU              4           ;Bytes per vector
   25 00000000         ;Stack
   26 00000000 00000100 
                       SSTACK_SIZE
                               EQU              0x00000100
   27 00000000         ;****************************************************************
   28 00000000         ;Program
   29 00000000         ;Linker requires Reset_Handler
   30 00000000                 AREA             MyCode,CODE,READONLY
   31 00000000                 ENTRY
   32 00000000                 EXPORT           Reset_Handler
   33 00000000         Reset_Handler
   34 00000000         main
   35 00000000         ;---------------------------------------------------------------



ARM Macro Assembler    Page 2 Program Title for Listing Header Goes Here


   36 00000000         ;>>>>> begin main program code <<<<<
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000 481C            LDR              R0,=P       ;Instantiating the initial variables
   41 00000002 6803            LDR              R3,[R0,#0]
   42 00000004 481C            LDR              R0,=Q
   43 00000006 6804            LDR              R4,[R0,#0]
   44 00000008         
   45 00000008 F7FF FFFE       BL               InitData    ;initdata load
   46 0000000C         
   47 0000000C         FLAG_DONE                            ;the lable that is used to jump back to 
   48 0000000C         ;beggining of loop after completion of 
   49 0000000C         ;TestDAta   
   50 0000000C         
   51 0000000C F7FF FFFE       BL               LoadData    ;load data load
   52 00000010         
   53 00000010         
   54 00000010 D20D            BCS              DONE        ;called when the program is finished and
   55 00000012         ;jumps to final lable
   56 00000012         
   57 00000012         
   58 00000012         ;initialzing P and Q, P to R1, and Q to R0
   59 00000012 4818            LDR              R0,=P
   60 00000014 6801            LDR              R1,[R0,#0]
   61 00000016 4A18            LDR              R2,=Q
   62 00000018 6810            LDR              R0,[R2,#0]
   63 0000001A         
   64 0000001A         
   65 0000001A         
   66 0000001A F000 F80C       BL               DIVU        ;Calling DIVU
   67 0000001E         
   68 0000001E         
   69 0000001E D207            BCS              FLAG_SET    ;checking if C flag is set, if it is, set 
   70 00000020         ;P and Q as 0xFFFFFFFF
   71 00000020         
   72 00000020         
   73 00000020         SET_DONE                             ;the lable that FLAG_SET uses to jump back 
   74 00000020         ;to main code after complete
   75 00000020         
   76 00000020         
   77 00000020 4A14            LDR              R2,=P       ;reinitializing P and Q, this time, P is R0 



ARM Macro Assembler    Page 3 Program Title for Listing Header Goes Here


   78 00000022 6010            STR              R0,[R2,#0]  ;and Q is R1, which is the way the provided 
   79 00000024 4A14            LDR              R2,=Q       ;code needs it to be
   80 00000026 6011            STR              R1,[R2,#0]
   81 00000028         
   82 00000028         
   83 00000028 F7FF FFFE       BL               TestData    ;Calls test data
   84 0000002C         
   85 0000002C E7EE            B                FLAG_DONE   ;Goes back to FLAG_DONE and restart the cycle
   86 0000002E         
   87 0000002E         
   88 0000002E         DONE
   89 0000002E         
   90 0000002E         
   91 0000002E         
   92 0000002E         ;>>>>>   end main program code <<<<<
   93 0000002E         ;Stay here
   94 0000002E E7FE            B                .
   95 00000030         
   96 00000030 4816    FLAG_SET
                               LDR              R0,=0xFFFFFFFF ;FLAG_SET is called when the C flag is set after
   97 00000032 4916            LDR              R1,=0xFFFFFFFF ;DIVU has been run and manually sets P and Q values
   98 00000034 E7F4            B                SET_DONE    ;as 0xFFFFFFFF
   99 00000036         
  100 00000036         
  101 00000036         
  102 00000036         ;----------------Start DIVU---------------------------  
  103 00000036         DIVU
  104 00000036         
  105 00000036 B404            PUSH             {R2}        ;Pushing R2 to save
  106 00000038 2200            MOVS             R2,#0
  107 0000003A 2800            CMP              R0,#0       ;checks if Divide by zero
  108 0000003C D009            BEQ              DIV_BY_ZERO
  109 0000003E         
  110 0000003E         
  111 0000003E         
  112 0000003E 2900            CMP              R1,#0       ;checks if Dividend is zero
  113 00000040 D00F            BEQ              EndIFF
  114 00000042         
  115 00000042 4281    While   CMP              R1,R0       ;the main loop where Dividen is conitunually subtracted
  116 00000044 D302            BLO              Endwhile    ;by the Divider until Dividen is either 0 or less than
  117 00000046         ;the Divider... R2 is used as the quotient
  118 00000046 1A09            SUBS             R1,R1,R0



ARM Macro Assembler    Page 4 Program Title for Listing Header Goes Here


  119 00000048 1C52            ADDS             R2,R2,#1
  120 0000004A         
  121 0000004A E7FA            B                While
  122 0000004C         Endwhile
  123 0000004C 0010            MOVS             R0,R2
  124 0000004E         
  125 0000004E         
  126 0000004E         
  127 0000004E         
  128 0000004E         
  129 0000004E BC04    DIVU_DONE
                               POP              {R2}        ;DIVU_DONE used when needed to return out of DIVU subroutine
                                                            
  130 00000050         
  131 00000050 4770            BX               LR
  132 00000052         
  133 00000052         
  134 00000052 F3EF 8000 
                       DIV_BY_ZERO
                               MRS              R0,APSR     ;Divide by zeros manually sets C flag to set
  135 00000056 2120            MOVS             R1,#0x20
  136 00000058 0609            LSLS             R1,R1,#24
  137 0000005A 4308            ORRS             R0,R0,R1
  138 0000005C F380 8800       MSR              APSR,R0
  139 00000060 E7F5            B                DIVU_DONE
  140 00000062         
  141 00000062         
  142 00000062 F3EF 8000 
                       EndIFF  MRS              R0,APSR     ;EndIFF manually sets C flag to clear if dividend is 0
  143 00000066 2020            MOVS             R0,#0x20
  144 00000068 0609            LSLS             R1,R1,#24
  145 0000006A 4388            BICS             R0,R0,R1
  146 0000006C F380 8800       MSR              APSR,R0
  147 00000070 2000            MOVS             R0,#0
  148 00000072         
  149 00000072 E7EC            B                DIVU_DONE
  150 00000074         
  151 00000074         ;****************************************************************
  152 00000074         ;Machine code provided for Exercise Four
  153 00000074         ;R. W. Melton 9/14/2015
  154 00000074         ;Place at the end of your MyCode AREA
  155 00000074 00000000 



ARM Macro Assembler    Page 5 Program Title for Listing Header Goes Here


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFFFFF         AREA             |.ARM.__at_0x4000|,CODE,READONLY
  156 00000000 2600 2700 
                       InitData
                               DCI.W            0x26002700
  157 00000004 4770            DCI              0x4770
  158 00000006 B40F A316 
                       LoadData
                               DCI.W            0xB40FA316
  159 0000000A 19DB A13D       DCI.W            0x19DBA13D
  160 0000000E 428B D209       DCI.W            0x428BD209
  161 00000012 CB03 4A10       DCI.W            0xCB034A10
  162 00000016 4B11 6010       DCI.W            0x4B116010
  163 0000001A 6019 3708       DCI.W            0x60193708
  164 0000001E 2000 0840       DCI.W            0x20000840
  165 00000022 BC0F 4770       DCI.W            0xBC0F4770
  166 00000026 2001 0840       DCI.W            0x20010840
  167 0000002A E7FA            DCI              0xE7FA
  168 0000002C B40F 480C 
                       TestData
                               DCI.W            0xB40F480C
  169 00000030 A134 19C0       DCI.W            0xA13419C0
  170 00000034 19C9 3808       DCI.W            0x19C93808
  171 00000038 3908 4A07       DCI.W            0x39084A07
  172 0000003C 4B07 6812       DCI.W            0x4B076812
  173 00000040 681B C00C       DCI.W            0x681BC00C
  174 00000044 6808 4290       DCI.W            0x68084290
  175 00000048 D104 6848       DCI.W            0xD1046848
  176 0000004C 4298 D101       DCI.W            0x4298D101
  177 00000050 BC0F 4770       DCI.W            0xBC0F4770
  178 00000054 1C76 E7FB       DCI.W            0x1C76E7FB
  179 00000058                 ALIGN
  180 00000058 00000000 
                       PPtr    DCD              P
  181 0000005C 00000000 
                       QPtr    DCD              Q
  182 00000060 00000000 
                       ResultsPtr



ARM Macro Assembler    Page 6 Program Title for Listing Header Goes Here


                               DCD              Results
  183 00000064 00000000 
              00000000 
              00000001 
              00000000         DCQ              0x0000000000000000,0x0000000000000001
  184 00000074 00000000 
              00000001 
              00000010 
              00000001         DCQ              0x0000000100000000,0x0000000100000010
  185 00000084 00000010 
              00000002 
              00000010 
              00000004         DCQ              0x0000000200000010,0x0000000400000010
  186 00000094 00000010 
              00000008 
              00000010 
              00000010         DCQ              0x0000000800000010,0x0000001000000010
  187 000000A4 00000010 
              00000020 
              00000007 
              00000001         DCQ              0x0000002000000010,0x0000000100000007
  188 000000B4 00000007 
              00000002 
              00000007 
              00000003         DCQ              0x0000000200000007,0x0000000300000007
  189 000000C4 00000007 
              00000004 
              00000007 
              00000005         DCQ              0x0000000400000007,0x0000000500000007
  190 000000D4 00000007 
              00000006 
              00000007 
              00000007         DCQ              0x0000000600000007,0x0000000700000007
  191 000000E4 00000007 
              00000008 
              80000000 
              80000000         DCQ              0x0000000800000007,0x8000000080000000
  192 000000F4 80000000 
              80000001 
              FFFFFFFF 
              000F0000         DCQ              0x8000000180000000,0x000F0000FFFFFFFF
  193 00000104 FFFFFFFF 



ARM Macro Assembler    Page 7 Program Title for Listing Header Goes Here


              FFFFFFFF 
              FFFFFFFF 
              FFFFFFFF         DCQ              0xFFFFFFFFFFFFFFFF,0xFFFFFFFFFFFFFFFF
  194 00000114 00000000 
              00000000 
              00000010 
              00000000         DCQ              0x0000000000000000,0x0000000000000010
  195 00000124 00000008 
              00000000 
              00000004 
              00000000         DCQ              0x0000000000000008,0x0000000000000004
  196 00000134 00000002 
              00000000 
              00000001 
              00000000         DCQ              0x0000000000000002,0x0000000000000001
  197 00000144 00000000 
              00000010 
              00000007 
              00000000         DCQ              0x0000001000000000,0x0000000000000007
  198 00000154 00000003 
              00000001 
              00000002 
              00000001         DCQ              0x0000000100000003,0x0000000100000002
  199 00000164 00000001 
              00000003 
              00000001 
              00000002         DCQ              0x0000000300000001,0x0000000200000001
  200 00000174 00000001 
              00000001 
              00000001 
              00000000         DCQ              0x0000000100000001,0x0000000000000001
  201 00000184 00000000 
              00000007 
              00000001 
              00000000         DCQ              0x0000000700000000,0x0000000000000001
  202 00000194 00000000 
              80000000 
              00001111 
              0000FFFF         DCQ              0x8000000000000000,0x0000FFFF00001111
  203 000001A4                 ALIGN
  204 000001A4         ;****************************************************************
  205 000001A4         



ARM Macro Assembler    Page 8 Program Title for Listing Header Goes Here


  206 000001A4         
  207 000001A4         
  208 000001A4         ;---------------------------------------------------------------
  209 000001A4         ;>>>>> begin subroutine code <<<<<
  210 000001A4         
  211 000001A4         
  212 000001A4         
  213 000001A4         ;>>>>>   end subroutine code <<<<<
  214 000001A4                 ALIGN
  215 000001A4         ;****************************************************************
  216 000001A4         ;Vector Table Mapped to Address 0 at Reset
  217 000001A4         ;Linker requires __Vectors to be exported
  218 000001A4                 AREA             RESET, DATA, READONLY
  219 00000000                 EXPORT           __Vectors
  220 00000000                 EXPORT           __Vectors_End
  221 00000000                 EXPORT           __Vectors_Size
  222 00000000         __Vectors
  223 00000000         ;ARM core vectors
  224 00000000 00000000        DCD              __initial_sp ;00:end of stack
  225 00000004 00000000        DCD              Reset_Handler ;reset vector
  226 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 9 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               SPACE            (VECTOR_TABLE_SIZE - (2 * VECTOR_SIZE))
  227 000000C0         __Vectors_End
  228 000000C0 000000C0 



ARM Macro Assembler    Page 10 Program Title for Listing Header Goes Here


                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  229 000000C0                 ALIGN
  230 000000C0         ;****************************************************************
  231 000000C0         ;Constants
  232 000000C0         
  233 000000C0                 AREA             MyConst,DATA,READONLY
  234 00000000         ;>>>>> begin constants here <<<<<
  235 00000000         
  236 00000000         ;>>>>>   end constants here <<<<<
  237 00000000         ;****************************************************************
  238 00000000                 AREA             |.ARM.__at_0x1FFFE000|,DATA,READWRITE,ALIGN=3
  239 00000000                 EXPORT           __initial_sp
  240 00000000         ;Allocate system stack
  241 00000000                 IF               :LNOT::DEF:SSTACK_SIZE
  243                          ENDIF
  244 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 11 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 12 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       Stack_Mem
                               SPACE            SSTACK_SIZE
  245 00000100         __initial_sp
  246 00000100         ;****************************************************************
  247 00000100         ;Variables
  248 00000100                 AREA             MyData,DATA,READWRITE
  249 00000000         ;>>>>> begin variables here <<<<<
  250 00000000         
  251 00000000 00 00 00 
              00       P       SPACE            4
  252 00000004 00 00 00 
              00       Q       SPACE            4
  253 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 13 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 14 Program Title for Listing Header Goes Here


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    Results SPACE            8 * MAX_DATA
  254 000000D0         ;>>>>>   end variables here <<<<<
  255 000000D0                 END
Command Line: --debug --xref --length=49 --width=120 --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=interwork --depend=.\o
bjects\exercise_04.d -o.\objects\exercise_04.o -I"D:\Lab44\Lab 4\RTE" -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.6.0\
Device\Include -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 515" --predefine="MKL46Z256xxx4 SETA 1
" --list=.\listings\exercise_04.lst Exercise_04.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DIVU 00000036

Symbol: DIVU
   Definitions
      At line 103 in file Exercise_04.s
   Uses
      At line 66 in file Exercise_04.s
Comment: DIVU used once
DIVU_DONE 0000004E

Symbol: DIVU_DONE
   Definitions
      At line 129 in file Exercise_04.s
   Uses
      At line 139 in file Exercise_04.s
      At line 149 in file Exercise_04.s

DIV_BY_ZERO 00000052

Symbol: DIV_BY_ZERO
   Definitions
      At line 134 in file Exercise_04.s
   Uses
      At line 108 in file Exercise_04.s
Comment: DIV_BY_ZERO used once
DONE 0000002E

Symbol: DONE
   Definitions
      At line 88 in file Exercise_04.s
   Uses
      At line 54 in file Exercise_04.s
Comment: DONE used once
EndIFF 00000062

Symbol: EndIFF
   Definitions
      At line 142 in file Exercise_04.s
   Uses
      At line 113 in file Exercise_04.s
Comment: EndIFF used once
Endwhile 0000004C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Endwhile
   Definitions
      At line 122 in file Exercise_04.s
   Uses
      At line 116 in file Exercise_04.s
Comment: Endwhile used once
FLAG_DONE 0000000C

Symbol: FLAG_DONE
   Definitions
      At line 47 in file Exercise_04.s
   Uses
      At line 85 in file Exercise_04.s
Comment: FLAG_DONE used once
FLAG_SET 00000030

Symbol: FLAG_SET
   Definitions
      At line 96 in file Exercise_04.s
   Uses
      At line 69 in file Exercise_04.s
Comment: FLAG_SET used once
MyCode 00000000

Symbol: MyCode
   Definitions
      At line 30 in file Exercise_04.s
   Uses
      None
Comment: MyCode unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 33 in file Exercise_04.s
   Uses
      At line 32 in file Exercise_04.s
      At line 225 in file Exercise_04.s

SET_DONE 00000020




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SET_DONE
   Definitions
      At line 73 in file Exercise_04.s
   Uses
      At line 98 in file Exercise_04.s
Comment: SET_DONE used once
While 00000042

Symbol: While
   Definitions
      At line 115 in file Exercise_04.s
   Uses
      At line 121 in file Exercise_04.s
Comment: While used once
main 00000000

Symbol: main
   Definitions
      At line 34 in file Exercise_04.s
   Uses
      None
Comment: main unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x4000 00000000

Symbol: .ARM.__at_0x4000
   Definitions
      At line 155 in file Exercise_04.s
   Uses
      None
Comment: .ARM.__at_0x4000 unused
InitData 00000000

Symbol: InitData
   Definitions
      At line 156 in file Exercise_04.s
   Uses
      At line 45 in file Exercise_04.s
Comment: InitData used once
LoadData 00000006

Symbol: LoadData
   Definitions
      At line 158 in file Exercise_04.s
   Uses
      At line 51 in file Exercise_04.s
Comment: LoadData used once
PPtr 00000058

Symbol: PPtr
   Definitions
      At line 180 in file Exercise_04.s
   Uses
      None
Comment: PPtr unused
QPtr 0000005C

Symbol: QPtr
   Definitions
      At line 181 in file Exercise_04.s
   Uses
      None
Comment: QPtr unused
ResultsPtr 00000060




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: ResultsPtr
   Definitions
      At line 182 in file Exercise_04.s
   Uses
      None
Comment: ResultsPtr unused
TestData 0000002C

Symbol: TestData
   Definitions
      At line 168 in file Exercise_04.s
   Uses
      At line 83 in file Exercise_04.s
Comment: TestData used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 218 in file Exercise_04.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 222 in file Exercise_04.s
   Uses
      At line 219 in file Exercise_04.s
      At line 228 in file Exercise_04.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 227 in file Exercise_04.s
   Uses
      At line 220 in file Exercise_04.s
      At line 228 in file Exercise_04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyConst 00000000

Symbol: MyConst
   Definitions
      At line 233 in file Exercise_04.s
   Uses
      None
Comment: MyConst unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x1FFFE000 00000000

Symbol: .ARM.__at_0x1FFFE000
   Definitions
      At line 238 in file Exercise_04.s
   Uses
      None
Comment: .ARM.__at_0x1FFFE000 unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 244 in file Exercise_04.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 245 in file Exercise_04.s
   Uses
      At line 224 in file Exercise_04.s
      At line 239 in file Exercise_04.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyData 00000000

Symbol: MyData
   Definitions
      At line 248 in file Exercise_04.s
   Uses
      None
Comment: MyData unused
P 00000000

Symbol: P
   Definitions
      At line 251 in file Exercise_04.s
   Uses
      At line 40 in file Exercise_04.s
      At line 59 in file Exercise_04.s
      At line 77 in file Exercise_04.s
      At line 180 in file Exercise_04.s

Q 00000004

Symbol: Q
   Definitions
      At line 252 in file Exercise_04.s
   Uses
      At line 42 in file Exercise_04.s
      At line 61 in file Exercise_04.s
      At line 79 in file Exercise_04.s
      At line 181 in file Exercise_04.s

Results 00000008

Symbol: Results
   Definitions
      At line 253 in file Exercise_04.s
   Uses
      At line 182 in file Exercise_04.s
Comment: Results used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

MAX_DATA 00000019

Symbol: MAX_DATA
   Definitions
      At line 19 in file Exercise_04.s
   Uses
      At line 253 in file Exercise_04.s
Comment: MAX_DATA used once
SSTACK_SIZE 00000100

Symbol: SSTACK_SIZE
   Definitions
      At line 26 in file Exercise_04.s
   Uses
      At line 244 in file Exercise_04.s
Comment: SSTACK_SIZE used once
VECTOR_SIZE 00000004

Symbol: VECTOR_SIZE
   Definitions
      At line 24 in file Exercise_04.s
   Uses
      At line 226 in file Exercise_04.s
Comment: VECTOR_SIZE used once
VECTOR_TABLE_SIZE 000000C0

Symbol: VECTOR_TABLE_SIZE
   Definitions
      At line 23 in file Exercise_04.s
   Uses
      At line 226 in file Exercise_04.s
Comment: VECTOR_TABLE_SIZE used once
__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 228 in file Exercise_04.s
   Uses
      At line 221 in file Exercise_04.s
Comment: __Vectors_Size used once
5 symbols
370 symbols in table
